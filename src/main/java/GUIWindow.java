
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import static java.awt.image.BufferedImage.TYPE_INT_ARGB;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.Timer;
import java.util.*;
import java.sql.Time;
import static org.json.JSONObject.NULL;

/**
 *
 * @author team6
 */
public class GUIWindow extends javax.swing.JFrame {

    SimpleDateFormat timeFormat = new SimpleDateFormat("h:mm:ss a");
    GUIPreferences preferences = new GUIPreferences(this, false);
    String location = "London,Ca";
    JSON jsonObj = new JSON(location);
    LinkedList<Current> currentList = new LinkedList(); 
    private Current currentObj = jsonObj.updateCurrentWeatherData();

    Time currentTime = new Time(System.currentTimeMillis());    // Last updated time
    String userPreferences = "";
    


    
    /**
     * Creates new form GUIWindow
     */
    public GUIWindow() {
        initComponents();
        initTabs();         // Sets the default size for tabs
        initIcons();        // Sets the default sunrise/sunset icons
    }
    /*
    private void invisible(){
        temperaturePanelLabel.setVisible(false);
        temperatureLabel.setVisible(false);
        windlSpeedDirLabel.setVisible(false);
        windSpeedDirPanelLabel.setVisible(false);
        pressureLabel.setVisible(false);
        pressurePanelLabel.setVisible(false);
        humidityLabel.setVisible(false);
        humidityPanelLabel.setVisible(false);
        skyConditionLabel.setVisible(false);
        skyConditionPanelLabel.setVisible(false);
        minMaxTempLabel.setVisible(false);
        minMaxTempPanelLabel.setVisible(false);
        lastUpdatedLabel.setVisible(false);
        lastUpdatedFieldLabel.setVisible(false);
    }
    private void visible()
    {
        temperaturePanelLabel.setVisible(true);
        temperatureLabel.setVisible(true);
        windlSpeedDirLabel.setVisible(true);
        windSpeedDirPanelLabel.setVisible(true);
        pressureLabel.setVisible(true);
        pressurePanelLabel.setVisible(true);
        humidityLabel.setVisible(true);
        humidityPanelLabel.setVisible(true);
        skyConditionLabel.setVisible(true);
        skyConditionPanelLabel.setVisible(true);
        minMaxTempLabel.setVisible(true);
        minMaxTempPanelLabel.setVisible(true);
        lastUpdatedLabel.setVisible(true);
        lastUpdatedFieldLabel.setVisible(true);
    }*/
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField3 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jMenu2 = new javax.swing.JMenu();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        GUIWindowPanel = new javax.swing.JPanel();
        locationTextField = new javax.swing.JTextField();
        LiveTimeLabel = new javax.swing.JLabel();
        lastUpdatedTimeLabel = new javax.swing.JLabel();
        CurrentlyViewingLocationLabel = new javax.swing.JLabel();
        refreshButton = new javax.swing.JButton();
        currentLocationLabel = new javax.swing.JLabel();
        guiTabbedPanels = new javax.swing.JTabbedPane();
        currentPanel = new javax.swing.JPanel();
        currentLocation = new javax.swing.JLabel();
        skyStateIconC = new javax.swing.JLabel();
        temperatureHeader = new javax.swing.JLabel();
        minTempHeader = new javax.swing.JLabel();
        skyConditionField = new javax.swing.JLabel();
        windSpeedHeader = new javax.swing.JLabel();
        windSpeedField = new javax.swing.JLabel();
        airPressureHeader = new javax.swing.JLabel();
        humidityHeader = new javax.swing.JLabel();
        maxTempHeader = new javax.swing.JLabel();
        airPressureField = new javax.swing.JLabel();
        humidityField = new javax.swing.JLabel();
        sunriseField = new javax.swing.JLabel();
        sunsetField = new javax.swing.JLabel();
        sunriseLabel = new javax.swing.JLabel();
        sunsetLabel = new javax.swing.JLabel();
        windDirectionField = new javax.swing.JLabel();
        shortTermPanel = new javax.swing.JPanel();
        currentLocationST = new javax.swing.JLabel();
        separatorSeven = new javax.swing.JSeparator();
        separatorSix = new javax.swing.JSeparator();
        separatorFive = new javax.swing.JSeparator();
        separatorFour = new javax.swing.JSeparator();
        separatorThree = new javax.swing.JSeparator();
        separatorTwo = new javax.swing.JSeparator();
        separatorOne = new javax.swing.JSeparator();
        skyStateIconOne = new javax.swing.JLabel();
        skyStateIconTwo = new javax.swing.JLabel();
        skyStateIconThree = new javax.swing.JLabel();
        skyStateIconFour = new javax.swing.JLabel();
        skyStateIconFive = new javax.swing.JLabel();
        skyStateIconSix = new javax.swing.JLabel();
        skyStateIconSeven = new javax.swing.JLabel();
        skyStateIconEight = new javax.swing.JLabel();
        conditionLabelOne = new javax.swing.JLabel();
        conditionLabelOne1 = new javax.swing.JLabel();
        conditionLabelOne2 = new javax.swing.JLabel();
        conditionLabelOne3 = new javax.swing.JLabel();
        conditionLabelOne4 = new javax.swing.JLabel();
        conditionLabelOne5 = new javax.swing.JLabel();
        conditionLabelOne6 = new javax.swing.JLabel();
        conditionLabelOne7 = new javax.swing.JLabel();
        longTermPanel = new javax.swing.JPanel();
        currentLocationLT = new javax.swing.JLabel();
        MenuPreferences = new javax.swing.JMenuBar();
        preferencesMenu = new javax.swing.JMenu();

        jTextField1.setText("jTextField1");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextField3.setText("jTextField3");

        jPanel3.setBackground(new java.awt.Color(192, 241, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 205, Short.MAX_VALUE)
        );

        jMenu2.setText("jMenu2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(152, 232, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(1024, 576));
        setMinimumSize(new java.awt.Dimension(1024, 576));

        GUIWindowPanel.setBackground(new java.awt.Color(32, 32, 32));
        GUIWindowPanel.setForeground(new java.awt.Color(255, 255, 255));
        GUIWindowPanel.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        GUIWindowPanel.setMaximumSize(new java.awt.Dimension(1024, 576));
        GUIWindowPanel.setMinimumSize(new java.awt.Dimension(1024, 576));
        GUIWindowPanel.setPreferredSize(new java.awt.Dimension(1024, 576));

        locationTextField.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        locationTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        locationTextField.setText("Default: \"London,Ca\"");
        locationTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        locationTextField.setMinimumSize(new java.awt.Dimension(82, 20));
        locationTextField.setColumns(30);
        locationTextField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                locationTextFieldMouseClicked(evt);
            }
        });
        locationTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationTextFieldActionPerformed(evt);
            }
        });
        locationTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                locationTextFieldFocusGained(evt);
            }
        });

        Calendar now = Calendar.getInstance();
        LiveTimeLabel = new JLabel (timeFormat.format(now.getTime()));

        new Timer (1000, new ActionListener()
            {
                @Override
                public void actionPerformed(ActionEvent e)
                {
                    Calendar now = Calendar.getInstance();
                    LiveTimeLabel.setText(timeFormat.format(now.getTime()));
                }
            }).start();
            LiveTimeLabel.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N

            lastUpdatedTimeLabel.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
            lastUpdatedTimeLabel.setForeground(new java.awt.Color(255, 255, 255));
            lastUpdatedTimeLabel.setText("Updated: \"\"");

            CurrentlyViewingLocationLabel.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
            CurrentlyViewingLocationLabel.setForeground(new java.awt.Color(255, 255, 255));
            CurrentlyViewingLocationLabel.setText("Currently Viewing Weather For:");

            refreshButton.setText("jButton1");
            refreshButton.setContentAreaFilled(false);
            refreshButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            refreshButton.setMargin(new java.awt.Insets(2, 20, 2, 2));
            refreshButton.setMaximumSize(new java.awt.Dimension(25, 25));
            refreshButton.setMinimumSize(new java.awt.Dimension(25, 25));
            refreshButton.setPreferredSize(new java.awt.Dimension(25, 25));
            refreshButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/view_refresh_rotated.png"))); // NOI18N
            initRefreshButton();
            refreshButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    refreshButtonActionPerformed(evt);
                }
            });

            currentLocationLabel.setForeground(new java.awt.Color(255, 255, 255));
            currentLocationLabel.setText("             ");

            guiTabbedPanels.setBackground(new java.awt.Color(225, 225, 225));
            guiTabbedPanels.setForeground(new java.awt.Color(0, 0, 0));
            guiTabbedPanels.setTabPlacement(javax.swing.JTabbedPane.LEFT);
            guiTabbedPanels.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
            guiTabbedPanels.setMaximumSize(new java.awt.Dimension(960, 480));
            guiTabbedPanels.setMinimumSize(new java.awt.Dimension(960, 480));
            guiTabbedPanels.setPreferredSize(new java.awt.Dimension(960, 480));

            currentPanel.setBackground(new java.awt.Color(225, 225, 225));
            currentPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
            currentPanel.setMaximumSize(new java.awt.Dimension(860, 32767));
            currentPanel.setMinimumSize(new java.awt.Dimension(860, 0));
            currentPanel.setPreferredSize(new java.awt.Dimension(860, 472));

            currentLocation.setFont(new java.awt.Font("Ubuntu", 0, 45)); // NOI18N
            currentLocation.setText("London, ON");

            skyStateIconC.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
            skyStateIconC.setMaximumSize(new java.awt.Dimension(140, 140));
            skyStateIconC.setMinimumSize(new java.awt.Dimension(140, 140));
            skyStateIconC.setPreferredSize(new java.awt.Dimension(140, 140));

            temperatureHeader.setFont(new java.awt.Font("Ubuntu", 0, 50)); // NOI18N
            temperatureHeader.setText(" ");
            temperatureHeader.setBorder(null);

            minTempHeader.setText("Min(Low):");
            minTempHeader.setBorder(null);

            skyConditionField.setText("\"Condition\"");
            skyConditionField.setBorder(null);

            windSpeedHeader.setFont(new java.awt.Font("Ubuntu", 0, 25)); // NOI18N
            windSpeedHeader.setText("WindSpeed");

            windSpeedField.setFont(new java.awt.Font("Ubuntu", 0, 20)); // NOI18N
            windSpeedField.setText("100 km/h");

            airPressureHeader.setFont(new java.awt.Font("Ubuntu", 0, 25)); // NOI18N
            airPressureHeader.setText("Air Pressure");

            humidityHeader.setFont(new java.awt.Font("Ubuntu", 0, 25)); // NOI18N
            humidityHeader.setText("Humidity");

            maxTempHeader.setText("Max(High):");
            maxTempHeader.setBorder(null);

            airPressureField.setFont(new java.awt.Font("Ubuntu", 0, 20)); // NOI18N
            airPressureField.setText("105 kPa");

            humidityField.setFont(new java.awt.Font("Ubuntu", 0, 20)); // NOI18N
            humidityField.setText("20 %");

            sunriseField.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
            sunriseField.setText("\"Sunrise\"");

            sunsetField.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
            sunsetField.setText("\"Sunset\"");

            sunriseLabel.setText("Sunrise");
            sunriseLabel.setMaximumSize(new java.awt.Dimension(130, 60));
            sunriseLabel.setMinimumSize(new java.awt.Dimension(130, 60));
            sunriseLabel.setPreferredSize(new java.awt.Dimension(130, 60));

            sunsetLabel.setText("Sunrise");
            sunsetLabel.setMaximumSize(new java.awt.Dimension(130, 60));
            sunsetLabel.setMinimumSize(new java.awt.Dimension(130, 60));
            sunsetLabel.setPreferredSize(new java.awt.Dimension(130, 60));

            windDirectionField.setFont(new java.awt.Font("Ubuntu", 0, 20)); // NOI18N
            windDirectionField.setText("East");

            javax.swing.GroupLayout currentPanelLayout = new javax.swing.GroupLayout(currentPanel);
            currentPanel.setLayout(currentPanelLayout);
            currentPanelLayout.setHorizontalGroup(
                currentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(currentPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(currentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(currentPanelLayout.createSequentialGroup()
                            .addGroup(currentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(skyStateIconC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(windSpeedHeader)
                                .addGroup(currentPanelLayout.createSequentialGroup()
                                    .addComponent(windSpeedField)
                                    .addGap(18, 18, 18)
                                    .addComponent(windDirectionField)))
                            .addGroup(currentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(currentPanelLayout.createSequentialGroup()
                                    .addGap(34, 34, 34)
                                    .addGroup(currentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(airPressureHeader)
                                        .addComponent(airPressureField))
                                    .addGap(26, 26, 26)
                                    .addGroup(currentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(humidityHeader)
                                        .addComponent(humidityField)))
                                .addGroup(currentPanelLayout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(temperatureHeader)
                                    .addGap(18, 18, 18)
                                    .addGroup(currentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(maxTempHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(minTempHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, currentPanelLayout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 436, Short.MAX_VALUE)
                                    .addGroup(currentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(currentPanelLayout.createSequentialGroup()
                                            .addComponent(sunsetLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(sunsetField))
                                        .addGroup(currentPanelLayout.createSequentialGroup()
                                            .addComponent(sunriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(sunriseField)))
                                    .addGap(69, 69, 69))))
                        .addComponent(currentLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(skyConditionField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap())
            );
            currentPanelLayout.setVerticalGroup(
                currentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(currentPanelLayout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addGroup(currentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(currentPanelLayout.createSequentialGroup()
                            .addComponent(currentLocation)
                            .addGap(18, 18, 18)
                            .addGroup(currentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(skyStateIconC, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(currentPanelLayout.createSequentialGroup()
                                    .addComponent(maxTempHeader)
                                    .addGap(24, 24, 24))
                                .addGroup(currentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(temperatureHeader)
                                    .addComponent(minTempHeader)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(skyConditionField)
                            .addGap(40, 40, 40)
                            .addGroup(currentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(windSpeedHeader)
                                .addComponent(airPressureHeader)
                                .addComponent(humidityHeader))
                            .addGap(18, 18, 18)
                            .addGroup(currentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(windSpeedField)
                                .addComponent(airPressureField)
                                .addComponent(humidityField)
                                .addComponent(windDirectionField)))
                        .addGroup(currentPanelLayout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addGroup(currentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(sunriseField)
                                .addComponent(sunriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(currentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(sunsetField)
                                .addComponent(sunsetLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addContainerGap(94, Short.MAX_VALUE))
            );

            guiTabbedPanels.addTab("Current", currentPanel);

            shortTermPanel.setBackground(new java.awt.Color(225, 225, 225));
            shortTermPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
            shortTermPanel.setMaximumSize(new java.awt.Dimension(860, 32767));
            shortTermPanel.setMinimumSize(new java.awt.Dimension(860, 0));
            shortTermPanel.setPreferredSize(new java.awt.Dimension(860, 472));

            currentLocationST.setFont(new java.awt.Font("Ubuntu", 0, 45)); // NOI18N
            currentLocationST.setText("London, ON");

            separatorSeven.setBackground(new java.awt.Color(225, 225, 225));
            separatorSeven.setForeground(new java.awt.Color(200, 200, 200));
            separatorSeven.setOrientation(javax.swing.SwingConstants.VERTICAL);

            separatorSix.setBackground(new java.awt.Color(225, 225, 225));
            separatorSix.setForeground(new java.awt.Color(200, 200, 200));
            separatorSix.setOrientation(javax.swing.SwingConstants.VERTICAL);

            separatorFive.setBackground(new java.awt.Color(225, 225, 225));
            separatorFive.setForeground(new java.awt.Color(200, 200, 200));
            separatorFive.setOrientation(javax.swing.SwingConstants.VERTICAL);

            separatorFour.setBackground(new java.awt.Color(225, 225, 225));
            separatorFour.setForeground(new java.awt.Color(200, 200, 200));
            separatorFour.setOrientation(javax.swing.SwingConstants.VERTICAL);
            separatorFour.setPreferredSize(new java.awt.Dimension(8, 8));

            separatorThree.setBackground(new java.awt.Color(225, 225, 225));
            separatorThree.setForeground(new java.awt.Color(200, 200, 200));
            separatorThree.setOrientation(javax.swing.SwingConstants.VERTICAL);
            separatorThree.setMinimumSize(new java.awt.Dimension(10, 10));
            separatorThree.setName(""); // NOI18N

            separatorTwo.setBackground(new java.awt.Color(225, 225, 225));
            separatorTwo.setForeground(new java.awt.Color(200, 200, 200));
            separatorTwo.setOrientation(javax.swing.SwingConstants.VERTICAL);
            separatorTwo.setMinimumSize(new java.awt.Dimension(12, 4));

            separatorOne.setBackground(new java.awt.Color(225, 225, 225));
            separatorOne.setForeground(new java.awt.Color(200, 200, 200));
            separatorOne.setOrientation(javax.swing.SwingConstants.VERTICAL);
            separatorOne.setPreferredSize(new java.awt.Dimension(14, 10));

            skyStateIconOne.setText("    \"Icon\"");
            skyStateIconOne.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

            skyStateIconTwo.setText("    \"Icon\"");
            skyStateIconTwo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

            skyStateIconThree.setText("    \"Icon\"");
            skyStateIconThree.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

            skyStateIconFour.setText("    \"Icon\"");
            skyStateIconFour.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

            skyStateIconFive.setText("    \"Icon\"");
            skyStateIconFive.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

            skyStateIconSix.setText("    \"Icon\"");
            skyStateIconSix.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

            skyStateIconSeven.setText("    \"Icon\"");
            skyStateIconSeven.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

            skyStateIconEight.setText("    \"Icon\"");
            skyStateIconEight.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

            conditionLabelOne.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
            conditionLabelOne.setText("\"Condition\"");

            conditionLabelOne1.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
            conditionLabelOne1.setText("\"Condition\"");

            conditionLabelOne2.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
            conditionLabelOne2.setText("\"Condition\"");

            conditionLabelOne3.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
            conditionLabelOne3.setText("\"Condition\"");

            conditionLabelOne4.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
            conditionLabelOne4.setText("\"Condition\"");

            conditionLabelOne5.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
            conditionLabelOne5.setText("\"Condition\"");

            conditionLabelOne6.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
            conditionLabelOne6.setText("\"Condition\"");

            conditionLabelOne7.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
            conditionLabelOne7.setText("\"Condition\"");

            javax.swing.GroupLayout shortTermPanelLayout = new javax.swing.GroupLayout(shortTermPanel);
            shortTermPanel.setLayout(shortTermPanelLayout);
            shortTermPanelLayout.setHorizontalGroup(
                shortTermPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(shortTermPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(shortTermPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(shortTermPanelLayout.createSequentialGroup()
                            .addGroup(shortTermPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(conditionLabelOne)
                                .addComponent(skyStateIconOne, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(16, 16, 16)
                            .addComponent(separatorOne, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(shortTermPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(shortTermPanelLayout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addComponent(skyStateIconTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(shortTermPanelLayout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(conditionLabelOne1)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(separatorTwo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(shortTermPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(skyStateIconThree, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(conditionLabelOne2))
                            .addGap(18, 18, 18)
                            .addComponent(separatorThree, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(currentLocationST, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                    .addGroup(shortTermPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(skyStateIconFour, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(conditionLabelOne3, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(separatorFour, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(shortTermPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(skyStateIconFive, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(conditionLabelOne4))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(separatorFive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(shortTermPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(shortTermPanelLayout.createSequentialGroup()
                            .addGap(14, 14, 14)
                            .addComponent(skyStateIconSix, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(shortTermPanelLayout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(conditionLabelOne5)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(separatorSix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(14, 14, 14)
                    .addGroup(shortTermPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(skyStateIconSeven, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(conditionLabelOne6))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(separatorSeven, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(shortTermPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(skyStateIconEight, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(conditionLabelOne7))
                    .addContainerGap())
            );
            shortTermPanelLayout.setVerticalGroup(
                shortTermPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(shortTermPanelLayout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addGroup(shortTermPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(shortTermPanelLayout.createSequentialGroup()
                            .addComponent(currentLocationST)
                            .addGroup(shortTermPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(shortTermPanelLayout.createSequentialGroup()
                                    .addGap(39, 39, 39)
                                    .addGroup(shortTermPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(separatorFive, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(separatorSix, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(separatorFour, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(separatorThree, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(separatorTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(separatorOne, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(shortTermPanelLayout.createSequentialGroup()
                                    .addGap(63, 63, 63)
                                    .addGroup(shortTermPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(skyStateIconOne, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(skyStateIconTwo, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(shortTermPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(conditionLabelOne)
                                        .addComponent(conditionLabelOne1)))
                                .addGroup(shortTermPanelLayout.createSequentialGroup()
                                    .addGap(64, 64, 64)
                                    .addComponent(skyStateIconFour, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(conditionLabelOne3))
                                .addGroup(shortTermPanelLayout.createSequentialGroup()
                                    .addGap(64, 64, 64)
                                    .addComponent(skyStateIconFive, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(conditionLabelOne4))
                                .addGroup(shortTermPanelLayout.createSequentialGroup()
                                    .addGap(64, 64, 64)
                                    .addComponent(skyStateIconSeven, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(conditionLabelOne6))
                                .addGroup(shortTermPanelLayout.createSequentialGroup()
                                    .addGap(64, 64, 64)
                                    .addComponent(skyStateIconEight, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(conditionLabelOne7))
                                .addGroup(shortTermPanelLayout.createSequentialGroup()
                                    .addGap(64, 64, 64)
                                    .addComponent(skyStateIconThree, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(conditionLabelOne2))
                                .addGroup(shortTermPanelLayout.createSequentialGroup()
                                    .addGap(64, 64, 64)
                                    .addComponent(skyStateIconSix, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(conditionLabelOne5))))
                        .addComponent(separatorSeven, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE))
            );

            guiTabbedPanels.addTab("Short Term", shortTermPanel);

            longTermPanel.setBackground(new java.awt.Color(225, 225, 225));
            longTermPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
            longTermPanel.setMaximumSize(new java.awt.Dimension(860, 32767));
            longTermPanel.setMinimumSize(new java.awt.Dimension(860, 0));
            longTermPanel.setPreferredSize(new java.awt.Dimension(860, 472));

            currentLocationLT.setFont(new java.awt.Font("Ubuntu", 0, 45)); // NOI18N
            currentLocationLT.setText("London, ON");

            javax.swing.GroupLayout longTermPanelLayout = new javax.swing.GroupLayout(longTermPanel);
            longTermPanel.setLayout(longTermPanelLayout);
            longTermPanelLayout.setHorizontalGroup(
                longTermPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(longTermPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(currentLocationLT, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(546, Short.MAX_VALUE))
            );
            longTermPanelLayout.setVerticalGroup(
                longTermPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(longTermPanelLayout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addComponent(currentLocationLT)
                    .addContainerGap(394, Short.MAX_VALUE))
            );

            guiTabbedPanels.addTab("Long Term", longTermPanel);

            javax.swing.GroupLayout GUIWindowPanelLayout = new javax.swing.GroupLayout(GUIWindowPanel);
            GUIWindowPanel.setLayout(GUIWindowPanelLayout);
            GUIWindowPanelLayout.setHorizontalGroup(
                GUIWindowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(GUIWindowPanelLayout.createSequentialGroup()
                    .addComponent(locationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE))
                .addGroup(GUIWindowPanelLayout.createSequentialGroup()
                    .addGap(29, 29, 29)
                    .addGroup(GUIWindowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(GUIWindowPanelLayout.createSequentialGroup()
                            .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(2, 2, 2)
                            .addComponent(CurrentlyViewingLocationLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(currentLocationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(lastUpdatedTimeLabel)
                            .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GUIWindowPanelLayout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addGroup(GUIWindowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GUIWindowPanelLayout.createSequentialGroup()
                                    .addComponent(guiTabbedPanels, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(35, 35, 35))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, GUIWindowPanelLayout.createSequentialGroup()
                                    .addComponent(LiveTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(57, 57, 57))))))
            );
            GUIWindowPanelLayout.setVerticalGroup(
                GUIWindowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(GUIWindowPanelLayout.createSequentialGroup()
                    .addComponent(locationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(GUIWindowPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lastUpdatedTimeLabel)
                        .addComponent(CurrentlyViewingLocationLabel)
                        .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(currentLocationLabel))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(guiTabbedPanels, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LiveTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
            );

            refreshButton.getAccessibleContext().setAccessibleName("RefreshButton");
            guiTabbedPanels.getAccessibleContext().setAccessibleName("");

            preferencesMenu.setText("Preferences");
            preferencesMenu.setContentAreaFilled(false);
            preferencesMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            preferencesMenu.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
            preferencesMenu.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    preferencesMenuMouseClicked(evt);
                }
            });
            MenuPreferences.add(preferencesMenu);

            setJMenuBar(MenuPreferences);

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(GUIWindowPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(GUIWindowPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );

            getAccessibleContext().setAccessibleName("GUIWindow");

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void preferencesMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_preferencesMenuMouseClicked
        // TODO add your handling code here:
        // Preferences handler
        System.out.println("Click Detected");
        preferences.setLocationRelativeTo(null);    // Display in main 
        preferences.setVisible(true);
    }//GEN-LAST:event_preferencesMenuMouseClicked

    private void locationTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_locationTextFieldFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_locationTextFieldFocusGained

    /*
    * locationFieldActionPerformed sends a new json query
    */
    private void locationTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationTextFieldActionPerformed
        System.out.println("Enter detected");
        try // Check if location exists
        {
            location = locationTextField.getText();
            jsonObj = new JSON(location);
            updateCurrentTab();
        }
        catch (Exception e)
        {
            GUIException exp = new GUIException();
            exp.setVisible(true);
        }
    }//GEN-LAST:event_locationTextFieldActionPerformed

    /*
    * actionListener to seelct 
    */
    private void locationTextFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_locationTextFieldMouseClicked
        locationTextField.requestFocusInWindow();
        locationTextField.selectAll();  // Highlight text in LocationField
    }//GEN-LAST:event_locationTextFieldMouseClicked

    // Action listener for when the refresh icon is clicked
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        currentTime = new Time(System.currentTimeMillis());
//        lastUpdatedTimeLabel.setText("Updated:" + currentTime.toString()); // Use this to update the text within the program body
    }//GEN-LAST:event_refreshButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUIWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUIWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUIWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUIWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CurrentlyViewingLocationLabel;
    private javax.swing.JPanel GUIWindowPanel;
    private javax.swing.JLabel LiveTimeLabel;
    private javax.swing.JMenuBar MenuPreferences;
    private javax.swing.JLabel airPressureField;
    private javax.swing.JLabel airPressureHeader;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel conditionLabelOne;
    private javax.swing.JLabel conditionLabelOne1;
    private javax.swing.JLabel conditionLabelOne2;
    private javax.swing.JLabel conditionLabelOne3;
    private javax.swing.JLabel conditionLabelOne4;
    private javax.swing.JLabel conditionLabelOne5;
    private javax.swing.JLabel conditionLabelOne6;
    private javax.swing.JLabel conditionLabelOne7;
    private javax.swing.JLabel currentLocation;
    private javax.swing.JLabel currentLocationLT;
    private javax.swing.JLabel currentLocationLabel;
    private javax.swing.JLabel currentLocationST;
    private javax.swing.JPanel currentPanel;
    private javax.swing.JTabbedPane guiTabbedPanels;
    private javax.swing.JLabel humidityField;
    private javax.swing.JLabel humidityHeader;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JLabel lastUpdatedTimeLabel;
    private javax.swing.JTextField locationTextField;
    private javax.swing.JPanel longTermPanel;
    private javax.swing.JLabel maxTempHeader;
    private javax.swing.JLabel minTempHeader;
    private javax.swing.JMenu preferencesMenu;
    private javax.swing.JButton refreshButton;
    private javax.swing.JSeparator separatorFive;
    private javax.swing.JSeparator separatorFour;
    private javax.swing.JSeparator separatorOne;
    private javax.swing.JSeparator separatorSeven;
    private javax.swing.JSeparator separatorSix;
    private javax.swing.JSeparator separatorThree;
    private javax.swing.JSeparator separatorTwo;
    private javax.swing.JPanel shortTermPanel;
    private javax.swing.JLabel skyConditionField;
    private javax.swing.JLabel skyStateIconC;
    private javax.swing.JLabel skyStateIconEight;
    private javax.swing.JLabel skyStateIconFive;
    private javax.swing.JLabel skyStateIconFour;
    private javax.swing.JLabel skyStateIconOne;
    private javax.swing.JLabel skyStateIconSeven;
    private javax.swing.JLabel skyStateIconSix;
    private javax.swing.JLabel skyStateIconThree;
    private javax.swing.JLabel skyStateIconTwo;
    private javax.swing.JLabel sunriseField;
    private javax.swing.JLabel sunriseLabel;
    private javax.swing.JLabel sunsetField;
    private javax.swing.JLabel sunsetLabel;
    private javax.swing.JLabel temperatureHeader;
    private javax.swing.JLabel windDirectionField;
    private javax.swing.JLabel windSpeedField;
    private javax.swing.JLabel windSpeedHeader;
    // End of variables declaration//GEN-END:variables

    /**
     * initRefreshButton() updates the refresh icon with a new icon
     * used for animation of refresh icon
     **/
    private void initRefreshButton()
    {
        ImageIcon icon = new ImageIcon(GUIWindow.class.getResource("view_refresh.png"));
        refreshButton.setIcon(icon);
    }
    
    private void initIcons()
    {
        ImageIcon sunrise = new ImageIcon(GUIWindow.class.getResource("sunriseW.png"));
        sunriseLabel.setIcon(sunrise);
        
        ImageIcon sunset = new ImageIcon(GUIWindow.class.getResource("sunset.png"));
        sunsetLabel.setIcon(sunset);

    }
    
    /*
     * updateCurrentTab is called by an action-listener and upates the current
     * weather view's information
     */
    private void updateCurrentTab()
    {
        if (jsonObj != NULL) // In case the data hasn't been refreshed yet
        {
            Current currentObject = jsonObj.updateCurrentWeatherData();
            temperatureHeader.setText(String.valueOf(currentObject.getTemperature()) + "C");            
            windSpeedField.setText(String.valueOf(currentObj.getWindSpeed()) + " m/s");
            airPressureField.setText(String.valueOf(currentObj.getAirPressure()) + " hPa");
            humidityField.setText(String.valueOf(currentObj.getHumidity()) + "%");
            skyConditionField.setText(currentObj.getSkyCondition());
            maxTempHeader.setText(String.valueOf(currentObj.getMaxTemp()) + "C");
            minTempHeader.setText(String.valueOf(currentObj.getMinTemp()) + "C");
            
//            skyStateIconC
            
            ImageIcon skyState = currentObj.getCondition();
            skyStateIconC.setIcon(skyState);
            
            /*
            Image buff = skyState.getImage();
            BufferedImage skyStateBig = new BufferedImage(buff.getWidth(null), buff.getHeight(null), BufferedImage.TYPE_INT_ARGB);
            Graphics ssIcon = skyStateBig.createGraphics();
            ssIcon.drawImage(buff, 0, 0, 140, 140, null);
            
            ImageIcon newIcon = new ImageIcon(skyStateBig);
            
            skyStateIconC.setIcon(newIcon);
            */ // FIX TO RESIZE IMAGE
            
            sunriseField.setText(String.valueOf(currentObj.getSunRise()));    // Uncomment when available
            sunsetField.setText(String.valueOf(currentObj.getSunSet()));      // Uncomment when available
            
        }
    }
    

    /*
     * initTabs sets the default labels and size of the tab options in the GUI
     */
    private void initTabs()
    {
        JLabel currentTab = new JLabel ("Current");
        currentTab.setPreferredSize(new Dimension (80,40));
        guiTabbedPanels.setTabComponentAt(0,currentTab);
        
        JLabel shortTermTab = new JLabel ("Short Term");
        shortTermTab.setPreferredSize(new Dimension (80,40));
        guiTabbedPanels.setTabComponentAt(1,shortTermTab);
        
        JLabel longTermTab = new JLabel ("Long Term");
        longTermTab.setPreferredSize(new Dimension (80,40));
        guiTabbedPanels.setTabComponentAt(2,longTermTab);
    }

}
